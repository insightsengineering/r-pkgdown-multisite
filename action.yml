name: R pkgdown Multi Version docs
author: Insights Engineering
description: Generates multisite R documentation created with pkgdown.
branding:
  icon: "anchor"
  color: "orange"
inputs:
  path:
    description: Path to package's root
    required: false
    default: "."
  default-landing-page:
    description: |
      The default branch or tag on gh-pages that corresponds to the landing page.
      For instance, if your root index page on gh-pages is built using the 'main'
      branch, then the root page of the site will correspond to this page.
      If 'latest-tag' is selected, then the latest version will become the default.
    default: main
    required: false
  branches-or-tags-to-list:
    description: Which branches or tags should be listed under the
      'Versions' dropdown menu on the landing page?
      This input should be a regular expression in R.
    required: false
    default: >-
      ^main$|^devel$|^prerelease$|^latest-tag$|^release-candidate$|^develop$|^v([0-9]+\\.)?([0-9]+\\.)?([0-9]+)|^v([0-9]+\\.)?([0-9]+\\.)?([0-9]+)(-rc[0-9]+)$
  refs-order:
    description: |
      The order in which refs should appear in the drop-down list. Versions not in the vector
      will appear below refs listed here.
      If docs have never been generated for the ref, the ref will not appear in the
      drop-down. Similarly, if docs have been generated for the ref, but the ref is not
      listed in the vector, it will not appear in the drop-down.
      Example (the refs on the list should be separated by space):
      main devel prerelease latest-tag
    required: false
    default: "main devel prerelease latest-tag"
  latest-tag-alt-name:
    description: An alternate name for the 'latest-tag' item
    required: false
    default: ""
  release-candidate-alt-name:
    description: An alternate name for the 'release-candidate' item
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Create copy of latest tag
      run: |
        cd ${{ inputs.path }}
        set +o pipefail
        latest_tag=$(ls -1d * \
          | grep -E "^v([0-9]+\.)?([0-9]+\.)?([0-9]+)$" \
          | sort -t "." -k1,1n -k2,2n -k3,3n \
          | tail -1)
        latest_rc_tag=$(ls -1d * \
          | grep -E "^v([0-9]+\.)?([0-9]+\.)?([0-9]+)(-rc[0-9]+)$" \
          | sort -t "." -k1,1n -k2,2n -k3,3n \
          | tail -1)
        set -o pipefail
        rm -rf latest-tag
        rm -rf release-candidate
        [[ "${latest_tag}" != "" ]] \
          && ( \
            cp -r "${latest_tag}" latest-tag \
            && perl -p -i -e \
              "s@${latest_tag}@latest-tag@g" \
              latest-tag/search.json
          ) \
          || echo "No latest tag found, not creating directory for latest-tag"
        [[ "${latest_rc_tag}" != "" ]] \
          && ( \
            cp -r "${latest_rc_tag}" release-candidate \
            && perl -p -i -e \
              "s@${latest_rc_tag}@release-candidate@g" \
              release-candidate/search.json
          ) \
          || echo "No release candidate tag found, not creating directory for release-candidate"
        if [[ "${{ inputs.latest-tag-alt-name }}" != "" && -d latest-tag ]]
        then {
          rm -rf ${{ inputs.latest-tag-alt-name }}
          cp -r latest-tag ${{ inputs.latest-tag-alt-name }}
        }
        fi
        if [[ "${{ inputs.release-candidate-alt-name }}" != "" && -d release-candidate ]]
        then {
          rm -rf ${{ inputs.release-candidate-alt-name }}
          cp -r release-candidate ${{ inputs.release-candidate-alt-name }}
        }
        fi
      shell: bash

    - name: Create redirect page
      run: |
        cd ${{ inputs.path }}
        cp "${GITHUB_ACTION_PATH}/redirect.html" index.html
        perl -p -i -e \
          "s@DEFAULT_LANDING_PAGE@${{ inputs.default-landing-page }}@g" \
          index.html
        perl -p -i -e \
          "s@REPOSITORY@${{ github.event.repository.name }}@g" \
          index.html
        perl -p -i -e \
          "s@OWNER@${{ github.repository_owner }}@g" \
          index.html
        touch .nojekyll
      shell: bash

    - name: Create root-level pkgdown.yml
      run: |
        cd ${{ inputs.path }}
        DEFAULT_LANDING_PAGE="${{ inputs.default-landing-page }}"
        if [ -f $DEFAULT_LANDING_PAGE/pkgdown.yml ]
        then {
          cp $DEFAULT_LANDING_PAGE/pkgdown.yml .
          sed -i -E \
            "/$DEFAULT_LANDING_PAGE/! s/(\/(reference|articles))/\/$DEFAULT_LANDING_PAGE\1/g" \
            pkgdown.yml
        }
        fi
      shell: bash

    - name: Run multi-version site creation script
      run: |
        pip install lxml packaging
        python ${GITHUB_ACTION_PATH}/core.py ${{ github.event.repository.name }}/ \
          --pattern '${{ inputs.branches-or-tags-to-list }}' \
          --refs_order ${{ inputs.refs-order }} \
          --base_url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
      shell: bash

    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "[actions skip] Built site for ${{ github.event.repository.name }}@${{ github.sha }}"
        repository: ${{ inputs.path }}
        commit_user_name: github-actions
        commit_user_email: 41898282+github-actions[bot]
        branch: gh-pages
        create_branch: true
